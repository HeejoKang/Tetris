
	#################################################################
	#	Управление													#
	#################################################################
	
	
	Up, Down, Left, Right - перещение
	X - вращение по X
	C - вращение по Y
	V - вращение по Z	
	
	
	#Камера
	
	I, K, J, L - вращение поля
	F - приблизить
	D - отдалить
	
	
	#Разное
	
	ESC - выход
	F1 - переключить режим окна
	S - начать/остановить игру
	-/= - уменьшить/увеличить скорость
	
	
	
	
	
	
	
	
	
	#################################################################
	#	Полезные ссылки												#
	#################################################################
		
	О трансформациях над матрицами
		http://www.songho.ca/opengl/gl_transform.html
		https://gamedev.ru/code/articles/?id=4161
		
		
		
	
	
	
	
	
	
	#################################################################
	#	Пояснения к функциям										#
	#################################################################
		
	>glMatrixMode(GL_MODELVIEW) и glMatrixMode(GL_PROJECTION)
	Команда glMatrixMode() задает текущую матруцу. Т.е. ту матрицу, на которую будут воздействовать 
	последующие вызовы команд glLoadIdentity, glRotate, glTranslate, glMultMatrix, и т.д. 
	
	В OpenGL есть три матрицы (точнее три стека матриц): 
		1) Текстурные. 
		2) Преобразования модели. 
		3) Проекции. 
	1. При задании текстурных координат эти координаты перемножаются на матрицу 1. 
	2. При задании координат геометрии (glVertex, и т.д.) координаты перемножаются сначала на матрицу 2, потом на матрицу 3.
	
	
	glPushMatrix()
	glPopMatrix()
		Они предназначены для сохранения и восстановления текущих координат. Я не стал здесь приводить 
		пример на то, как неудобно переходить от одной системы координат к другой и помнить все ваши 
		переходы. Гораздо удобнее с помощью glPushMatrix() сохранить текущие координаты, потом 
		сдвигаться, вертеться, как вам угодно, а после, вызывом glPopMatrix, вернуться к старым 
		координатам
		
		
	glPushMatrix - положить в стек текущюю матрицу
	glPopMatrix - вытащить со стека положеную туда матрицу.
	
	Объектно-видовая трансформация позиционирует объект относительно камеры, проекционная матрица отвечает за перспективу, 
	т.е. чем дальше объект от "камеры", тем меньше он должен быть нарисован в конечном изображении.

	
	
	#Translation
		Translation is the process of adding another vector on top of the original vector to return a new vector with a different 
		position, thus moving the vector based on a translation vector.
	
	
	
	
	
	
	
	
	#################################################################
	#	Пояснения по программе										#
	#################################################################
	
	Фигуры генерируются рандомно, абсолютно полный куб 3х3х3 содержит в себе 27 мелких кубиков, 
	каждый из которых может при генерации фигуры либо быть "включенным", т.е. его значение
	равно 1 либо выключенным, т.е. 0
	
	
	INT BASE[N][N][N] - эта трехмерный массив представляет собой игровое поле, его значения это
	размеры игрового поля
	
	Игровое поле отвечает за отрисовку попадающих в него кубов, т.е. цвет, расположение
	
	putInBase() - функция счити
	
	
	
	
	
	
	
	
	
	
	